1.下载：http://ant.apache.org/
2.环境变量：ANT_HOME=D:\apache\apache-ant-1.9.7
           path=.;%ANT_HOME%\bin
3.测试:cmd  >>ant –version
4.
build.xml：
<?xml version="1.0"?>
<project name="helloWorld">
       <target name="sayHelloWorld">
              <echo message="Hello,Amigo"/>
       </target>
</project>
>>>ant sayHelloWorld
>>>ant –projecthelp
>>>ant –f hello.xml sayHelloWorld
>>>ant –buildfile hello.xml sayHelloWorld
>>>ant –file hello.xml sayHelloWorld
5.Ant工具中每一个任务封装了具体要执行的功能，是Ant工具的基本执行单位
    1. copy任务 主要用来对文件和目录的复制功能
        Eg1.复制单个文件：<copy file="file.txt" tofile="copy.txt"/>
        Eg2.对文件目录进行复制：
           <copy todir="../newdir/dest_dir">
                    <fileset dir="src_dir"/>
         </copy>
        Eg3. 将文件复制到另外的目录：
         <copy file="file.txt" todir="../other/dir"/>
    2.       delete任务
         对文件或目录进行删除，举例如下：
         Eg1. 删除某个文件：<delete file="photo/amigo.jpg"/>
         Eg2. 删除某个目录：<delete dir="photo"/>
         Eg3. 删除所有的备份目录或空目录：
                 <delete includeEmptyDirs="true">
                        <fileset dir="." includes="**/*.bak"/>
                 </delete>
    3.       mkdir任务
         创建目录。eg：<mkdir dir="build"/>
    4.       move任务
         移动文件或目录，举例如下：
         Eg1. 移动单个文件：<move file="fromfile" tofile=”tofile”/>
         Eg2. 移动单个文件到另一个目录：<move file="fromfile" todir=”movedir”/>
         Eg3. 移动某个目录到另一个目录：
                 <move todir="newdir">
                        <fileset dir="olddir"/>
                 </move>
    5.       echo任务
         该任务的作用是根据日志或监控器的级别输出信息。它包括message、file、append和level四个属性，举例如下：
         <echo message="Hello,Amigo" file="logs/system.log" append="true">
6.利用Ant构建和部署Java工程
    Ant可以代替使用javac、java和jar等命令来执行java操作，从而达到轻松的构建和部署Java工程的目的
例：
<?xml version="1.0"?>
<!-- project元素是Ant构件文件的根元素
  name属性      用于指定project元素的名称
  default属性   用于指定project默认执行时所执行的target的名称
  basedir属性   用于指定基路径的位置
-->
<project name="javaTest" default="jar" basedir=".">
    <!-- target元素它为Ant的基本执行单元
    name属性        指定target元素的名称
    depends属性     用于描述target之间的依赖关系,多个target依赖顺序依次执行，需要以“,”间隔.被依赖的target会先执行
    if属性          用于验证指定的属性是否存在，若不存在，所在target将不会被执行
    unless属性      该属性的功能与if属性的功能正好相反，它也用于验证指定的属性是否存在，若不存在，所在target将会被执行
    description属性 该属性是关于target功能的简短描述和说明
    -->
    <target name="clean">
        <delete dir="build"/>
        <echo message="The base dir is: ${basedir}"></echo>
    </target>

    <target name="compile" depends="clean">
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes"/>
    </target>

    <target name="run" depends="compile">
        <java classname="HelloWorld">
            <classpath>
                <pathelement path="build/classes"/>
            </classpath>
        </java>
    </target>

    <target name="jar" depends="run">
        <jar destfile="helloworld.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-class" value="HelloWorld"/>
            </manifest>
        </jar>
    </target>
</project>

例：
<?xml version="1.0"?>
<project name="antwebproject" default="war" basedir=".">
    <!-- property元素
      该元素可看作参量或者参数的定义，project的属性可以通过property元素来设定，也可在Ant之外设定。若要在外部引入某文件，例如build.properties文件，可以通过如下内容将其引入：<property file=” build.properties”/>
      Ant提供了一些内置的属性，它能得到的系统属性的列表与Java文档中System.getPropertis()方法得到的属性一致，这些系统属性可参考sun网站的说明
      Ant还提供了一些它自己的内置属性，如下：
        basedir：project基目录的绝对路径，该属性在讲解project元素时有详细说明，不再赘述；
        ant.file：buildfile的绝对路径，如上面的各例子中，ant.file的值为E:"build.xml；
        ant.version：Ant的版本，在本文中，值为1.7.0；
        ant.project.name：当前指定的project的名字，即前文说到的project的name属性的值；
        ant.java.version：Ant检测到的JDK的版本，在上例运行结果中可看到为1.5。
    -->
    <property name="classes" value="build/classes"/>
    <property name="build" value="build"/>
    <property name="lib" value="WebRoot/WEB-INF/lib"/>
    <!-- 删除build路径-->
    <target name="clean">
        <delete dir="build"/>
    </target>

    <!-- 建立build/classes路径，并编译class文件到build/classes路径下-->
    <target name="compile" depends="clean">
        <mkdir dir="${classes}"/>

        <javac srcdir="src" destdir="${classes}"/>
    </target>

    <!-- 打war包-->
    <target name="war" depends="compile">
        <war destfile="${build}/antwebproject.war" webxml="WebRoot/WEB-INF/web.xml">
            <!-- 拷贝WebRoot下除了WEB-INF和META-INF的两个文件夹-->
            <fileset dir="WebRoot" includes="**/*.jsp"/>

            <!-- 拷贝lib目录下的jar包-->
            <lib dir="${lib}"/>
            <!-- 拷贝build/classes下的class文件-->
            <classes dir="${classes}"/>
        </war>
    </target>
</project>
